version: "3.9"

services:

  db:
    container_name: db
    image: postgres:alpine
    volumes:
      - ./postgre/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: backend
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && black -l 78 . && flake8 . && gunicorn Django_E.wsgi --bind 0.0.0.0:8000"
    volumes:
      - ./Django_E:/app
      - static_volume:/app/static
      - media_volume:/app/media

    expose:
      - "8000"
    environment:
      - SECRET_KEY=test
      - DEBUG=False
    depends_on:
      - redis
      - db

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
    - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports: 
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - redis
      - backend

  worker:
    build: .
    command: celery -A Django_E worker -l info
    depends_on:
      - redis
      - backend
    volumes:
      - ./Django_E:/app


volumes:
  static_volume:
  media_volume: